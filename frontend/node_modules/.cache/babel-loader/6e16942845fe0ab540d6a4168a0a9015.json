{"ast":null,"code":"var _jsxFileName = \"/Users/Sheava/Desktop/honey-bear/frontend/src/components/session/login_form.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../../scss/layout/login_form.scss';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDemoLogin = this.handleDemoLogin.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  } // when user has been authenticated, redirects to items for now.\n  // will probably change to user home page or something later.\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/');\n    } // Set or clear errors\n\n\n    this.setState({\n      errors: nextProps.errors\n    });\n  } // Handle field updates (called in the render method)\n\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  } // Handle form submission\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.login(user);\n  }\n\n  handleDemoLogin(e) {\n    e.preventDefault();\n    const demoUser = {\n      email: 'honeybear@camp.com',\n      password: '123456'\n    };\n    this.props.login(demoUser).then(() => this.props.history.push('/items/'));\n  }\n\n  // Render the session errors if there are any\n  renderErrors() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, Object.keys(this.state.errors).map((error, i) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"each-error\",\n      key: `error-${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, this.state.errors[error])));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"login-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"Log in\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"single\",\n      type: \"text\",\n      value: this.state.email,\n      onChange: this.update('email'),\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"single\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.update('password'),\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"login-submit-button\",\n      type: \"submit\",\n      value: \"Log in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parent-demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"demo-signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, \"Or, try our \", /*#__PURE__*/React.createElement(\"span\", {\n      id: \"demo-signin-link\",\n      onClick: this.handleDemoLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 69\n      }\n    }, \"demo user login\"), \" instead.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"errors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, this.renderErrors())))));\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/Sheava/Desktop/honey-bear/frontend/src/components/session/login_form.jsx"],"names":["React","withRouter","LoginForm","Component","constructor","props","state","email","password","errors","handleSubmit","bind","handleDemoLogin","renderErrors","componentWillReceiveProps","nextProps","currentUser","history","push","setState","update","field","e","currentTarget","value","preventDefault","user","login","demoUser","then","Object","keys","map","error","i","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../../scss/layout/login_form.scss';\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDemoLogin = this.handleDemoLogin.bind(this);\n        this.renderErrors = this.renderErrors.bind(this);\n    }\n\n    // when user has been authenticated, redirects to items for now.\n    // will probably change to user home page or something later.\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.currentUser === true) {\n            this.props.history.push('/');\n        }\n        // Set or clear errors\n        this.setState({ errors: nextProps.errors })\n    }\n\n    // Handle field updates (called in the render method)\n    update(field) {\n        return e => this.setState({\n            [field]: e.currentTarget.value\n        });\n    }\n\n    // Handle form submission\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let user = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        this.props.login(user);\n    }\n\n    handleDemoLogin(e) {\n        e.preventDefault();\n        const demoUser = { email: 'honeybear@camp.com', password: '123456' };\n        this.props.login(demoUser).then(() => this.props.history.push('/items/'));\n    };\n\n    // Render the session errors if there are any\n    renderErrors() {\n        return (\n            <ul>\n                {Object.keys(this.state.errors).map((error, i) => (\n                    <li className='each-error' key={`error-${i}`}>\n                        {this.state.errors[error]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n\n    render() {\n        return (\n            <div className='login-form-container'>\n                <form onSubmit={this.handleSubmit}>\n                    <div className='login-form'>\n                        <header className='login-head'>Log in</header>\n                        <br/>\n                        <div className='login-input-container'>\n                            <input \n                                className='single'\n                                type=\"text\"\n                                value={this.state.email}\n                                onChange={this.update('email')}\n                                placeholder=\"Email\"\n                                />\n                            <br />\n                            <input \n                                className='single'\n                                type=\"password\"\n                                value={this.state.password}\n                                onChange={this.update('password')}\n                                placeholder=\"Password\"\n                                />\n                            <br />\n                            <input className='login-submit-button' type=\"submit\" value=\"Log in\" />\n                            <div className='parent-demo'>\n                                <span id='demo-signin'>Or, try our {<span id='demo-signin-link' onClick={this.handleDemoLogin}>demo user login</span>} instead.</span>\n                            </div>\n                            <ul className='errors'>{this.renderErrors()}</ul>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}